version: "3.8"

networks:
  django:
    external: true

services: 
  django-prod:
    container_name: django-prod
    image: django-prod
    build:
      context: ../../services/django_ms
      dockerfile: ../../docker/common/build/django_ms/Dockerfile
      target: production
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - MAX_REQUESTS=${WSGI_MAX_REQUEST}
      - TIMEOUT=${WSGI_TIMEOUT}
    networks:
      django:
        aliases:
          - ${DJANGO_HOST}
  
  postgres-prod:
    container_name: postgres-prod
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_production:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      django:
        aliases:
          - ${POSTGRES_HOST}

volumes:
  postgres_production:
